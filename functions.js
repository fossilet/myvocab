// Generated by CoffeeScript 1.7.1

/*
Add more links to vocabuary.com word page.
Created by tux, Sat Feb  8 23:48:59 CST 2014
 */

(function() {
  var DEBUG, DOMModificationHandler, container, hasMangled, mangle, outerContainer, sites;

  DEBUG = true;

  DEBUG = false;

  container = "div.wordPage";

  outerContainer = "#dictionaryContent";

  sites = [
    {
      'name': 'Dictionary.com',
      'link': 'http://dictionary.reference.com/browse/',
      'class': 'dictionarycom'
    }, {
      'name': 'Youdao',
      'link': 'http://dict.youdao.com/search?q=',
      'class': 'youdao'
    }, {
      'name': 'Etymology',
      'link': 'http://etymonline.com/index.php?search=',
      'class': 'etymology'
    }, {
      'name': 'Google Images',
      'link': 'https://www.google.com/search?tbm=isch&q=',
      'class': 'googleimages'
    }
  ];

  hasMangled = false;

  mangle = function() {
    var link, links, mydiv, mydiv_content, site, site_tools, word, _i, _len;
    word = $.trim($("" + container + " h1").text());
    site_tools = "" + container + " div.tools";
    mydiv_content = '<div class="ext-link"></div>';
    mydiv = "" + container + " div.ext-link";
    $(mydiv).remove();
    links = (function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = sites.length; _i < _len; _i++) {
        site = sites[_i];
        _results.push("<a target='_blank' class='ext-link tbutton " + site["class"] + "' href='" + site["link"] + word + "'>" + site["name"] + "</a>");
      }
      return _results;
    })();
    if (DEBUG) {
      console.log("word: " + word, links);
    }
    ($(site_tools)).after(mydiv_content);
    for (_i = 0, _len = links.length; _i < _len; _i++) {
      link = links[_i];
      ($(mydiv)).append(link);
    }
    return hasMangled = true;
  };

  DOMModificationHandler = function(e) {
    if (hasMangled) {
      return $(this).unbind("DOMSubtreeModified");
    }
    $(this).unbind("DOMSubtreeModified");
    return setTimeout((function() {
      mangle();
      return $(outerContainer).bind("DOMSubtreeModified", DOMModificationHandler);
    }), 1000);
  };

  $(outerContainer).bind("DOMSubtreeModified", DOMModificationHandler);

}).call(this);
